# For more information about tox, see https://tox.readthedocs.io/en/latest/
[tox]
minversion = 3.4.0
envlist = lint,py27,py35,py36,py37,py38,devel,distros
skipsdist = True
skip_missing_interpreters = True
isolated_build = True

[testenv]
description =
    Unit testing
install_command =
    python -c 'import subprocess, sys; pip_inst_cmd = sys.executable, "-m", "pip", "install"; subprocess.check_call(pip_inst_cmd + ("pip<19.1", )); subprocess.check_call(pip_inst_cmd + tuple(sys.argv[1:]))' {opts} {packages}
usedevelop = True
deps =
    pep517>=0.5.0
    pytest>=3.0
    pytest-html>=1.21.0,<2.0; python_version < '3.6'
    pytest-html>=1.21.0; python_version >= '3.6'
    selinux>=0.1.5rc1
commands =
    ansible-inventory --graph
    pytest --collect-only
    # pytest already needs built wheel in dist/
    python -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ {toxinidir}
    pytest --color=yes --html={envlogdir}/reports.html --self-contained-html {tty:-s} --molecule-unavailable-driver= -k foo
setenv =
    ANSIBLE_FORCE_COLOR={env:ANSIBLE_FORCE_COLOR:1}
    # ANSIBLE_INVENTORY={env:ANSIBLE_INVENTORY:{toxinidir}/../zuul-infra/inventory.yml}
    ANSIBLE_INVENTORY={env:ANSIBLE_INVENTORY:{toxinidir}/tests/hosts.ini}
    ANSIBLE_CONFIG={toxinidir}/ansible.cfg
    ANSIBLE_NOCOWS=1
    ANSIBLE_RETRY_FILES_ENABLED=0
    ANSIBLE_STDOUT_CALLBACK={env:ANSIBLE_STDOUT_CALLBACK:debug}
    ANSIBLE_VERBOSITY={env:ANSIBLE_VERBOSITY:0}
    PIP_DISABLE_PIP_VERSION_CHECK=1
    PY_COLORS={env:PY_COLORS:1}
    # pip: Avoid 2020-01-01 warnings: https://github.com/pypa/pip/issues/6207
    PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base_command
    PYTHONDONTWRITEBYTECODE=1
    # This should pass these args to molecule, no effect here as this is the default
    # but it validates that it accepts extra params.
    MOLECULE_OPTS=--destroy always
passenv =
    CI
    CURL_CA_BUNDLE
    DOCKER_*
    PYTEST_OPTIONS
    REQUESTS_CA_BUNDLE
    SSH_AUTH_SOCK
    SSL_CERT_FILE
    TOXENV
    TRAVIS
    TRAVIS_*
    TWINE_*
whitelist_externals =
    bash
    twine
    pytest
    pre-commit

[testenv:distros]
description =
    Validate that we can install the wheel w/ or w/o extras on Ubuntu, Debian,
    Fedora, RHEL 8 and CentOS 7 by using containers.
# our distros molecule tests are using docker
extras =
    docker
commands =
    python -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ {toxinidir}
    pytest --color=yes --html={envlogdir}/reports.html --self-contained-html {tty:-s} --molecule-unavailable-driver=driver_error tests/roles/ensure-ansible

[testenv:devel]
description: Unit testing using master branch of molecule
commands =
    pip install -q git+https://github.com/ansible/molecule#egg=molecule
    {[testenv]commands}

[testenv:lint]
description = Performs linting, style checks, metadata-validation, packaging
skip_install = true
deps =
    pep517>=0.5.0
    pre-commit
    twine
commands =
    pre-commit run -a
    bash -c "rm -rf {toxinidir}/dist/ && mkdir -p {toxinidir}/dist/"
    python -m pep517.build \
      --source \
      --binary \
      --out-dir {toxinidir}/dist/ \
      {toxinidir}
    twine check dist/*

[testenv:upload]
description = Builds the packages and uploads them to https://pypi.org
envdir={toxworkdir}/lint
deps={[testenv:lint]deps}
commands =
    {[testenv:lint]commands}
    twine upload --disable-progress-bar --skip-existing --verbose dist/*
